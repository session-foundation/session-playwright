name: Run desktop regression tests
on:
  workflow_dispatch:
    inputs:
      DESKTOP_JOB_URL:
        description: 'The url of the session-desktop job'
        required: true
        type: string
        default: https://github.com/session-foundation/session-desktop/actions/runs/17312227704

      PLAYWRIGHT_REPEAT_COUNT:
        description: 'Repeats of each tests (0 to only run each once)'
        required: true
        type: number
        default: 0

      PLAYWRIGHT_RETRIES_COUNT:
        description: 'Retries of each tests (0 to only run each once, 1 to run another attempt)'
        required: true
        type: number
        default: 0

      PLAYWRIGHT_WORKERS_COUNT:
        description: 'Playwright workers to start'
        required: true
        type: number
        default: 8

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  desktop-regression:
    name: Desktop Regression Tests
    runs-on: [self-hosted, qa-android]

    env:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      PLAYWRIGHT_REPEAT_COUNT: ${{ github.event.inputs.PLAYWRIGHT_REPEAT_COUNT }}
      PLAYWRIGHT_RETRIES_COUNT: ${{ github.event.inputs.PLAYWRIGHT_RETRIES_COUNT }}
      PLAYWRIGHT_WORKERS_COUNT: ${{ github.event.inputs.PLAYWRIGHT_WORKERS_COUNT }}
      DESKTOP_JOB_URL: ${{ github.event.inputs.DESKTOP_JOB_URL }}
      ARTIFACT_NAME: 'Linux-X64-deb-qa-production'
      CI: true

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Runner Details
        run: |
          echo "DESKTOP_JOB_URL ${{ github.event.inputs.DESKTOP_JOB_URL }}"
          echo "PLAYWRIGHT_REPEAT_COUNT ${{ github.event.inputs.PLAYWRIGHT_REPEAT_COUNT }}"
          echo "PLAYWRIGHT_RETRIES_COUNT ${{ github.event.inputs.PLAYWRIGHT_RETRIES_COUNT }}"
          echo "PLAYWRIGHT_WORKERS_COUNT ${{ github.event.inputs.PLAYWRIGHT_WORKERS_COUNT }}"

      - name: 'Download prebuilt session-desktop'
        run: |
          RUN_ID=$(echo "$DESKTOP_JOB_URL" | sed -E 's|.*/runs/([0-9]+).*|\1|')
          echo "Run ID: $RUN_ID"


          response=$(curl -s -H "Authorization: Bearer $PAT_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/session-foundation/session-desktop/actions/runs/$RUN_ID/artifacts")
          echo "response: $response"


          artifact_url=$(echo "$response" | jq -r \
            --arg name "$ARTIFACT_NAME" \
            '.artifacts[] | select(.name == $name) | .archive_download_url')



          echo "Session desktop Artifact URL: $artifact_url"

          curl -L \
            -H "Authorization: token $PAT_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -o artifact.zip \
            $artifact_url

          unzip artifact.zip

      - name: 'print files'
        run: |
          ls -l

      - name: 'Extract deb package'
        run: |
          dpkg-deb -x *.deb extracted-deb
          ls ./extracted-deb
          ls -l ./extracted-deb/opt/Session/session-desktop

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install yarn
        run: |
          npm install -g yarn

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile

      - name: Build the Desktop tests
        run: |
          cd  $GITHUB_WORKSPACE
           yarn tsc

      - name: Run the Desktop tests
        run: |
          PRINT_ONGOING_TEST_LOGS= nice ionice xvfb-run --auto-servernum --server-num=1 --server-args='-screen 0, 1920x1080x24' yarn test
        #  DEBUG="pw:*"
        #

      - name: Kill all running electron app
        if: always()
        continue-on-error: true
        shell: bash
        run: |
          killall electron;
